
import React from 'react';
import { Link } from 'react-router-dom';
import PropTypes from "prop-types";

import {titlesForResource} from '../../../lib/js/utils';
import Resource from '../../../lib/js/resource';
import ResourceStream from '../../../lib/js/resourceStream';
import EventBus from '../../../lib/js/eventBus';

class {{class_name}}Form extends React.Component {
  constructor(props) {
    super(props);

    this.state = {};
  }

  onLoaded(name, data) {
    this[name] = data;
    this.setState({optionsLoaded: Date.now() })
  }

  render() {

    return (

      <div>
        <div className="row {{name}}-form-title-row form-title-row">
          <div className="col-sm-11">
            <h2 className="{{name}}-form-title form-title">{{display_name}}</h2>
          </div>
        </div>

        <form onSubmit={this.props.onSubmit}>
        {% for field in visible_fields %}
          <div className="form-group">
          <label htmlFor="{{field.name}}">{{field.name | capitalize}}</label>
          {% if field.type == "text" -%}
          <textarea
            rows={10}
            name="{{field.name}}"
            className="form-control {{name}}-{{field.name}}-form-data {{name}}-form-data form-data"
            id="{{field.name}}"
            value={ this.props.{{name}}.{{field.name}} }
            onChange={this.props.onChange} />

          {% elsif field.type == "boolean" -%}
          <input type="checkbox"
            name="{{field.name}}"
            className="form-control {{name}}-{{field.name}}-form-data {{name}}-form-data form-data"
            id="{{field.name}}"
            value={ this.props.{{name}}.{{field.name}} }
            onChange={this.props.onChange}
          />
          {% elsif field.type == "reference" -%}
          <select
            name="{{field.name}}_id"
            className="form-control {{name}}-{{field.name}}-form-data {{name}}-form-data form-data"
            id="{{field.name}}_id"
            value={ this.props.{{name}}.{{field.name}}_id }
            onChange={this.props.onChange}
          >
          { titlesForResource(this, "{{field.name | pluralize}}").map((opt) => {
              return (
                <option value={opt.value}>{opt.name}</option>
              )
            })
          }
          </select>
          {% else -%}
          <input
            name="{{field.name}}"
            type="text"
            className="form-control {{name}}-{{field.name}}-form-data {{name}}-form-data form-data"
            id="{{field.name}}"
            value={ this.props.{{name}}.{{field.name}} }
            onChange={this.props.onChange} />
          {% endif -%}
          </div>
        {% endfor %}
          <button type="submit" className="btn btn-success btn-lg">
            SAVE
          </button>
        </form>
      </div>
    );
  }
}

export default {{class_name}}Form;
