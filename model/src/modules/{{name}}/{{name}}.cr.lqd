class {{class_name}} < Granite::Base
  adapter {{database}}
  table_name {{table_name}}

  after_create :on_created
  after_update :on_updated
  after_destroy :on_deleted

{% for field in fields -%}
{% if field.type == "reference" -%}
{{"  "}}belongs_to :{{field.name}}
{% endif -%}
{% endfor %}
  # id : Int64 primary key is created for you
{% for field in fields -%}
{% if field.type != "reference" -%}
{% if field.hidden == false -%}
{{"  "}}field {{field.name}} : {{field.cr_type}}
{% endif -%}
{% endif -%}
{% endfor -%}
{% if database != "sqlite" -%}
{{"  "}}timestamps
{% endif %}

  def on_created
    Sockets::Model.send_model("{{name}}", "new", self.to_json)
  end

  def on_updated
    Sockets::Model.send_model("{{name}}", "update", self.to_json)
  end

  def on_deleted
    Sockets::Model.send_model("{{name}}", "delete", { :id => self.id }.to_json )
  end
end
