import React from 'react';
import PropTypes from 'prop-types'
import {
  Link,
  NavLink,
  Route,
  Switch
} from 'react-router-dom';

import Auth from '../../lib/js/auth';
import Sidebar from './sidebar';
import routes from '../../modules/js/routes';

class App extends React.Component {
  constructor(props, state) {
    super(props, state);
  }

  componentWillMount() {
    // get the current user
    let vm = this;
    let $ = window.$;

    $.ajax(
      {
        url: "/me",
        method: 'GET',
        dataType: 'json'
      })
      .done(function(data) {
        Auth.authenticateUser(data.token, data.user);
        vm.setState({current_user: data.user});
      })
      .fail(function(data) {
        console.log('error getting user', data)
      })
  }

  isAuthenticated() {
    return Auth.isUserAuthenticated() && this.state && typeof this.state.current_user !== 'undefined'
  }

  render() {
    return (
      <div>

        <nav className="navbar navbar-expand navbar-dark bg-primary">
          <div className="container">
            <Link to="/" className="navbar-brand">
              <img src="/dist/images/logo.svg" height="30" alt="Amber logo" />
            </Link>

              <ul className="navbar-nav mr-auto">
                <li key={'/'} className="nav-item">
                  <NavLink exact to="/" className="nav-link">Home</NavLink>
                </li>
                { routes.filter(route => route.path !== '/' && route.type === 'index').map((route, index) => (
                  <li key={route.path} className="nav-item">
                    <NavLink className="nav-link" to={route.path}>{route.name}</NavLink>
                  </li>
                ))
                }

              </ul>

              <ul className="navbar-nav">
              { this.isAuthenticated() ? (
                  <li className="nav-item">
                    <a className='nav-link' href='/signout'>Sign Out</a>
                  </li>
                ) : (
                  <li className="nav-item">
                    <a className='nav-Link' href='/signin'>Sign In</a>
                  </li>
                )
              }
              { this.isAuthenticated() ? (
                  <li className="nav-item">
                    <NavLink className='nav-link' to='/profile'>{this.state.current_user.email}</NavLink>
                  </li>
                ) : (
                  <li className="nav-item">
                    <a className='nav-link' href='/signup'>Sign Up</a>
                  </li>
                )
              }
              </ul>
          </div>
        </nav>

        <div className="container">
          <div className="row">
            <div className="col-sm-12 main">
              <div className="row main-content-container">
                <div className="col-sm-2 sidebar" >
                  <Sidebar />
                  <ul className="sidebar-links">
                  { routes.filter(route => route.path !== '/' && route.type === 'index').map((route, index) => (
                   // You can render a <Route> in as many places
                   // as you want in your app. It will render along
                   // with any other <Route>s that also match the URL.
                   // So, a sidebar or breadcrumbs or anything else
                   // that requires you to render multiple things
                   // in multiple places at the same URL is nothing
                   // more than multiple <Route>s.
                   <li key={route.path} >
                     <NavLink to={route.path}>{route.name}</NavLink>
                   </li>
                   ))
                  }

                  </ul>

                  <div className="sidebar-component">
                    { routes.map((route, index) => (
                     // You can render a <Route> in as many places
                     // as you want in your app. It will render along
                     // with any other <Route>s that also match the URL.
                     // So, a sidebar or breadcrumbs or anything else
                     // that requires you to render multiple things
                     // in multiple places at the same URL is nothing
                     // more than multiple <Route>s.
                     <Route
                       key={index}
                       path={route.path}
                       exact={route.exact}
                       component={route.sidebar}
                     />
                     ))
                    }
                  </div>
                </div>

                <div className="col-sm-10 main-content">
                  <Switch>
                   {routes.map((route, index) => (
                     // Render more <Route>s with the same paths as
                     // above, but different components this time.
                     <Route
                       key={index}
                       path={route.path}
                       exact={route.exact}
                       component={route.main}
                     />
                   ))}
                  </Switch>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }
}


export default App;
